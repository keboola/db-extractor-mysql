services:
  app: &app
    build: .
    image: keboola/db-extractor-mysql
    command: composer ci
    environment:
      KBC_COMPONENT_RUN_MODE: run
      KBC_DATA_TYPE_SUPPORT: none
      MYSQL_DB_HOST: mysql
      MYSQL_DB_SSL_HOST: mysql-ssl
      MYSQL_DB_SSL_BAD_CN_HOST: mysql-different-cn
      MYSQL_DB_USER: root
      MYSQL_DB_PASSWORD: rootpassword
      MYSQL_DB_DATABASE: test
      MYSQL_DB_PORT: 3306
    volumes:
      - ./docker/ssl/certificates:/ssl-cert
      - ssh-keys:/root/.ssh:ro
    links:
      - mysql
      - mysql-ssl
      - mysql-ssl:mysql-different-cn
      - sshproxy
    depends_on:
      mysql:
        condition: service_healthy
      mysql-ssl:
        condition: service_healthy

  dev:
    <<: *app
    volumes:
      - .:/code
      - ./data:/data
      - ./docker/ssl/certificates:/ssl-cert
      - ssh-keys:/root/.ssh:ro

  mysql:
    image: mysql:${MYSQL_VERSION}
    entrypoint: /usr/local/bin/entrypoint.sh
    volumes:
      - ./docker/mysql-entrypoint.sh:/usr/local/bin/entrypoint.sh
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: rootpassword
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-ssl:
    image: mysql:${MYSQL_VERSION}
    entrypoint: /usr/local/bin/entrypoint.sh
    volumes:
      - ./docker/ssl/certificates:/ssl-cert
      - ./docker/mysql-ssl/${MYSQL_VERSION}/conf.d:/etc/mysql/conf.d
      - ./docker/mysql-entrypoint.sh:/usr/local/bin/entrypoint.sh
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: rootpassword
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  sshproxy:
    image: keboola/db-component-ssh-proxy:latest
    volumes:
      - ssh-keys:/root/.ssh
    links:
      - mysql

volumes:
  ssh-keys:
